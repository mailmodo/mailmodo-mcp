name: Docker Push on Release

on:
  release:
    types: [created]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present  

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: 'Docker Login'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}
      
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ${{ github.workspace }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ${{ github.workspace }}/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/mailmodo-mcp:${{ github.ref_name }}
            ${{ secrets.DOCKER_USERNAME }}/mailmodo-mcp:latest
          platforms: linux/amd64
  
  check-test-and-publish:
    runs-on: ubuntu-latest
    environment: production
    timeout-minutes: 5
    steps:
        - uses: actions/checkout@master
          with:
              persist-credentials: false

        - name: Set up Node.js version
          uses: actions/setup-node@v1
          with:
              node-version: '20.x'

        - name: Install & Run ESLint and TS checks
          run: |

              npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}
              npm i
              npm run build

        - name: 'Publish to NPMjs'
          run: |
              npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}
              npm publish --access public